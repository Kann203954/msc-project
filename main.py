import game as gm
import numpy as np
import matplotlib.pyplot as plt

if __name__ == '__main__':
    payoff_matrices1 = [
        # s0        p0:
        np.array([[[[0, -1, 0, -1], [0, -1, 0, -1], [0, -1, 0, -1]],  # p0a0
                   [[-1, -2, -1, -2], [-1, -2, -1, -2], [-1, -2, -1, -2]]],  # p0a1
                  # p1:
                  [[[0, 0, -1, -1], [-1, -1, -2, -2], [-2, -2, -3, -3]],
                   [[-1, -1, -2, -2], [-2, -2, -3, -3], [-3, -3, -4, -4]]],
                  # p2:
                  [[[0, -1, -1, 2], [0, -1, -1, 2], [0, -1, -1, -2]],
                   [[0, -1, -1, 2], [0, -1, -1, 2], [0, -1, -1, 2]]]]),
        # s1            p1a0          p1a1          p1a2
        np.array([[[[0, -1, 0, -1], [0, -1, 0, -1], [0, -1, 0, -1]],
                   [[-1, -2, -1, -2], [-1, -2, -1, -2], [-1, -2, -1, -2]]],

                  [[[0, 0, -1, -1], [-1, -1, -2, -2], [-2, -2, -3, -3]],
                   [[-1, -1, -2, -2], [-2, -2, -3, -3], [-3, -3, -4, -4]]],

                  [[[-4, -4, -3, -3], [-3, -3, -2, -2], [-2, -2, -1, -1]],
                   [[-4, -4, -3, -3], [-3, -3, -2, -2], [-2, -2, -1, -1]]]])
    ]

    transition_matrices1 = [
        # s0
        np.array([[[[0.5, 0.5], [0.6, 0.4], [0.6, 0.4], [0.7, 0.3]],  # p1a0
                   [[0.6, 0.4], [0.7, 0.3], [0.7, 0.3], [0.8, 0.2]],  # p1a1
                   [[0.7, 0.3], [0.8, 0.2], [0.8, 0.2], [0.9, 0.1]]],  # p1a2
                  # └────────────────────p0a0────────────────────┘
                  # ┌────────────────────p0a1────────────────────┐
                  [[[0.6, 0.4], [0.7, 0.3], [0.7, 0.3], [0.8, 0.2]],
                   [[0.7, 0.3], [0.8, 0.2], [0.8, 0.2], [0.9, 0.1]],
                   [[0.8, 0.2], [0.9, 0.1], [0.9, 0.1], [1, 0]]]]),
        # s1           p2a0        p2a1        p2a2        p2a3
        np.array([[[[0, 1], [0, 1], [0.2, 0.8], [0.2, 0.8]],  # p1a0
                   [[0.2, 0.8], [0.2, 0.8], [0.4, 0.6], [0.4, 0.6]],  # p1a1
                   [[0.4, 0.6], [0.4, 0.6], [0.6, 0.4], [0.6, 0.4]]],  # p1a2
                  # └────────────────────p0a0────────────────────┘
                  # ┌────────────────────p0a1────────────────────┐
                  [[[0, 1], [0, 1], [0.4, 0.6], [0.4, 0.6]],
                   [[0.4, 0.6], [0.4, 0.6], [0.6, 0.4], [0.6, 0.4]],
                   [[0.7, 0.3], [0.7, 0.3], [0.8, 0.2], [0.8, 0.2]]]])
    ]

    payoff_matrices2 = [
        # s0        p0:
        np.array([[[[0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1]],  # p0a0
                   [[1, 2, 1, 2], [1, 2, 1, 2], [1, 2, 1, 2]]],  # p0a1
                  # p1:
                  [[[0, 0, 1, 1], [1, 1, 2, 2], [2, 2, 3, 3]],
                   [[-1, -1, 1, 1], [1, 1, 2, 2], [2, 2, 3, 3]]],
                  # p2:
                  [[[0, -2, -2, -3], [-1, -2, -2, -3], [-1, -2, -2, -3]],
                   [[-1, -2, -2, -3], [-1, -2, -2, -3], [-1, -2, -2, -3]]]]),
        # s1            p1a0          p1a1          p1a2
        np.array([[[[0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1]],  # p0a0
                   [[1, 2, 1, 2], [1, 2, 1, 2], [1, 2, 1, 2]]],

                  [[[-2, -2, -1, -1], [0, 0, 1, 1], [2, 2, 3, 3]],
                   [[-2, -2, -1, -1], [0, 0, 1, 1], [2, 2, 3, 3]]],

                  [[[-4, -4, -3, -3], [-3, -3, -2, -2], [-2, -2, -1, -1]],
                   [[-4, -4, -3, -3], [-3, -3, -2, -2], [-2, -2, -1, -1]]]])
    ]

    transition_matrices2 = [
        # s0
        np.array([[[[0.5, 0.5], [0.6, 0.4], [0.6, 0.4], [0.7, 0.3]],  # p1a0
                   [[0.6, 0.4], [0.7, 0.3], [0.7, 0.3], [0.8, 0.2]],  # p1a1
                   [[0.7, 0.3], [0.8, 0.2], [0.8, 0.2], [0.9, 0.1]]],  # p1a2
                  # └────────────────────p0a0────────────────────┘
                  # ┌────────────────────p0a1────────────────────┐
                  [[[0.6, 0.4], [0.7, 0.3], [0.7, 0.3], [0.8, 0.2]],
                   [[0.7, 0.3], [0.8, 0.2], [0.8, 0.2], [0.9, 0.1]],
                   [[0.8, 0.2], [0.9, 0.1], [0.9, 0.1], [1, 0]]]]),
        # s1           p2a0        p2a1        p2a2        p2a3
        np.array([[[[0, 1], [0, 1], [0.2, 0.8], [0.2, 0.8]],  # p1a0
                   [[0.2, 0.8], [0.2, 0.8], [0.4, 0.6], [0.4, 0.6]],  # p1a1
                   [[0.4, 0.6], [0.4, 0.6], [0.6, 0.4], [0.6, 0.4]]],  # p1a2
                  # └────────────────────p0a0────────────────────┘
                  # ┌────────────────────p0a1────────────────────┐
                  [[[0, 1], [0, 1], [0.4, 0.6], [0.4, 0.6]],
                   [[0.4, 0.6], [0.4, 0.6], [0.6, 0.4], [0.6, 0.4]],
                   [[0.7, 0.3], [0.7, 0.3], [0.8, 0.2], [0.8, 0.2]]]])
    ]

    common_discount_factor = 0.95

    game0 = gm.SGame(payoff_matrices=payoff_matrices1,
                     transition_matrices=transition_matrices1,
                     discount_factors=common_discount_factor)

    gm.learn_and_plot(game0, episode=1000, start_state=0, policy=gm.EpsGreedy(), eps=0.2)

    gm.print_game(game0)
    gm.print_q(game0)

    plt.show()
